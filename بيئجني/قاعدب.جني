ئورد بتشدبي، معلوقاب من مكون.بتشدبي؛
ئورد الئان من تاريخ؛
ئورد الكل ك سياق من سياق؛
ئورد نتجقاب من بتشدبي؛
ئورد مختطمشروع، مختطوحدة، مختطبطاقة من مختطة؛

ئعلن قابمحلي ك بتشدبي؛
ئعلن مشروعحالي ك مختطمشروع؛

ئعلن هلقاعدب () ك وعد منطق:
	ئدا ليس قابمحلي:
		قابمحلي = بتشدبي(سياق.ئسمقاب)؛
	تم
	نوعبنية نتج = ريتما قابمحلي.ئجلب('مشروع')؛
	مشروعحالي = نتج؛
	ئرجع نتج لا= عدم؛
تم

ئعلن ئستبدئقاب () ك وعد:
	ئدا ليس قابمحلي:
		قابمحلي = بتشدبي(سياق.ئسمقاب)؛
	تم
	#يحدف جميع الجدولين
	ريتما قابمحلي.ئهدم()؛
	#ينشئ قاب جديد
	قابمحلي = بتشدبي(سياق.ئسمقاب)؛
	#ئرسائ الفهرسين
	ريتما قابمحلي.خدفهرس(
		حقلين: ["نوع"، "وحدة"]
	)؛
	ريتما قابمحلي.خدفهرس(
		حقلين: ["نوع"]
	)؛
تم

ئعلن ئستولدمعرف () ك نصية:
	تاريخ تخ = تاريخ()؛
	ئرجع نصية(تخ.ردوقت())؛
تم

ئعلن ئستبدئمشروع (مختطمشروع مشروعي، نوعبنية[] ملفات) ك وعد:
	مختطوحدة[] وحدات = []؛
	مختطبطاقة[] بطاقات = []؛
	لكل ملف في ملفات:
		دع مسار = ملف['path']؛	
		مختطوحدة وحدتي = {
			_معرف: مسار،
			نوع: 'وحدة'،
			مسار: مسار،
			رتبة: مسار.قسسم('/').طول-1،
			معرفمشروع: مشروعي._معرف
		}؛
		وحدات.ئدفع(وحدتي)؛
		
		مختطبطاقة بطاقتي = {
			_معرف: ئستولدمعرف()،
			نوع: 'بطاقة'،
			وحدة: مسار،
			معرفمشروع: مشروعي._معرف،
			محتوا: ملف['محتوا']
		}؛
		بطاقات.ئدفع(بطاقتي)؛
	تم
	ريتما قابمحلي.خدواحد(مشروعي)؛
	ريتما قابمحلي.خدعديد(وحدات)؛
	ريتما قابمحلي.خدعديد(بطاقات)؛
	مشروعحالي = مشروعي؛
تم